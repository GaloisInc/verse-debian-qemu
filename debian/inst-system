#! /bin/sh
#
# Usage ./debian/inst-system pkg-suffix arch[=alias=alias..] arch... [+kvm]
# where pkg-suffix is the package suffix in
#  qemu-system-{arm|mips|ppc|sparc|x86|s390x|misc}
# each arch is qemu arch (with qemu-system-$arch binary), optionally
# followed by a number of =alias for this arch binary.
# Optionally +kvm is the qemu-system arch which implements native kvm,
# so /usr/bin/kvm is created as a link to qemu-system-$arch.
#
# The scripts moves (so it can't be re-run) d/tmp/usr/bin/qemu-system-$arch
# to debian/qemu-system-$suf/usr/bin/, creates manpage link to qemu-system.1,
# creates links for =aliases, links to common doc, and creates
# qemu-system-$suf.substvars file with two entries: sysarch:$suf,
# with a list of architectures in this package (for the package description),
# and sysprovides:$suf (for Provides field).

set -e

suf=$1; shift
pkg=qemu-system-$suf
base=debian/$pkg

mkdir -p $base/usr/bin $base/usr/share/man/man1
dh_link -p$pkg usr/share/doc/qemu-system-common usr/share/doc/$pkg/common

archlist=
provides=qemu-system-any

for arg in $@; do

  if [ "${arg#+}" != "${arg}" ]; then # kvm link
    arch=${arg#+}
    ln -sf qemu-system-$arch $base/usr/bin/kvm
    sed "s/@ARCH@/$arch/g" debian/kvm.1 > $base/usr/share/man/man1/kvm.1
    touch -r debian/kvm.1 $base/usr/share/man/man1/kvm.1
    #provides="$provides, qemu-kvm" # done in d/control for Replaces/Breaks
    continue
  fi

  arch=${arg%%=*}

  mv debian/tmp/usr/bin/qemu-system-$arch $base/usr/bin/
  echo ".so man1/qemu-system.1" > $base/usr/share/man/man1/qemu-system-$arch.1
  provides="$provides, qemu-system-$arch"
  archlist="$archlist $arch"

  if [ "$arch" != "$arg" ]; then
    list=
    for alias in $(echo ${arg#*=} | tr = \ ); do
      ln -sf qemu-system-$arch   $base/usr/bin/qemu-system-$alias
      ln -sf qemu-system-$arch.1 $base/usr/share/man/man1/qemu-system-$alias.1
      provides="$provides, qemu-system-$alias"
      list="$list $alias"
    done
    archlist="$archlist (${list# })"
  fi
done

archlist="${archlist# }" # remove leading space
# split long list into 2 lines (will have to change if it becomes longer)
len2=$((${#archlist} / 2))
if [ $len2 -gt 36 ]; then
 # find subsequent space
 while expr substr "$archlist" $len2 1 != " " >/dev/null; do
    len2=$(($len2+1))
  done
  # and break it at this space
  archlist="$(expr substr "$archlist" 1 $(($len2-1)))\${Newline} $(expr substr "$archlist" $(($len2+1)) $len2)"
fi

echo "sysarch:$suf=$archlist" > debian/$pkg.substvars
echo "sysprovides:$suf=$provides" | tr _ - >>debian/$pkg.substvars
